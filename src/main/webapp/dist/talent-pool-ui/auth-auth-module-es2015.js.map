{"version":3,"sources":["./src/app/auth/auth/auth.component.html","./src/app/auth/employeer-login/employeer-login.component.html","./src/app/auth/employeer-registartion/employeer-registartion.component.html","./src/app/auth/forgot-password/forgot-password.component.html","./src/app/auth/job-seeker-login/job-seeker-login.component.html","./src/app/auth/job-seeker-registration/job-seeker-registration.component.html","./src/app/auth/reset-password/reset-password.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth/auth.component.scss","./src/app/auth/auth/auth.component.ts","./src/app/auth/employeer-login/employeer-login.component.scss","./src/app/auth/employeer-login/employeer-login.component.ts","./src/app/auth/employeer-registartion/employeer-registartion.component.scss","./src/app/auth/employeer-registartion/employeer-registartion.component.ts","./src/app/auth/forgot-password/forgot-password.component.scss","./src/app/auth/forgot-password/forgot-password.component.ts","./src/app/auth/job-seeker-login/job-seeker-login.component.scss","./src/app/auth/job-seeker-login/job-seeker-login.component.ts","./src/app/auth/job-seeker-registration/job-seeker-registration.component.scss","./src/app/auth/job-seeker-registration/job-seeker-registration.component.ts","./src/app/auth/reset-password/reset-password.component.scss","./src/app/auth/reset-password/reset-password.component.ts","./src/app/shared/CustomValidatos.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row justify-content-center h-100 align-items-center\\\">\\n\\t<div class=\\\"col-md-4 col-12\\\">\\n\\t\\t<h3>Employeer</h3>\\n\\t\\t<p>\\n\\t\\t\\tGet hold of the talented developers in the current market for your\\n\\t\\t\\tbusiness needs.\\n\\t\\t</p>\\n\\t\\t<a [routerLink]=\\\"['employeer-login']\\\" class=\\\"btn btn-success btn-block\\\"\\n\\t\\t\\t>Login</a\\n\\t\\t>\\n\\t</div>\\n\\t<div class=\\\"col-md-4 col-12\\\">\\n\\t\\t<h3>Job Seeker</h3>\\n\\t\\t<p>\\n\\t\\t\\tThe world of oppertunies is at a stone throw distance. Grab it at the\\n\\t\\t\\tearliest\\n\\t\\t</p>\\n\\t\\t<a [routerLink]=\\\"['job-seeker-login']\\\" class=\\\"btn btn-primary btn-block\\\"\\n\\t\\t\\t>Login</a\\n\\t\\t>\\n\\t</div>\\n</div>\\n\"","export default \"<div class=\\\"row justify-content-center h-100 align-items-center\\\">\\n\\t<div class=\\\"col-md-4 col-12\\\">\\n\\t\\t<div *ngIf=\\\"loading\\\">\\n\\t\\t\\t<app-loading>Loading...</app-loading>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n\\t\\t\\t{{ error }}\\n\\t\\t</div>\\n\\t\\t<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"email\\\">Email</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\ttype=\\\"email\\\"\\n\\t\\t\\t\\t\\tformControlName=\\\"userName\\\"\\n\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.userName.errors }\\\"\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.userName.errors\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.userName.errors.required\\\">\\n\\t\\t\\t\\t\\t\\tUsername is required\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.userName.errors.email\\\">\\n\\t\\t\\t\\t\\t\\tUsername is not a valid email address\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\tformControlName=\\\"password\\\"\\n\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.password.errors.minlength\\\">\\n\\t\\t\\t\\t\\t\\tPassword must be at least 6 characters\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Login\\\" />\\n\\t\\t</form>\\n\\t\\t<div class=\\\"d-flex justify-content-between\\\">\\n\\t\\t\\t<a [routerLink]=\\\"['../job-seeker-registration']\\\" class=\\\"btn btn-link\\\"\\n\\t\\t\\t\\t>Register</a\\n\\t\\t\\t>\\n\\t\\t\\t<a [routerLink]=\\\"['../forgot-password']\\\" class=\\\"btn btn-link\\\"\\n\\t\\t\\t\\t>Forgot Password</a\\n\\t\\t\\t>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","export default \"<div class=\\\"row justify-content-center h-100 align-items-center\\\">\\n\\t<div class=\\\"col-md-8 col-12\\\">\\n\\t\\t<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>First Name</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"firstName\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"submitted && f.firstName.errors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"invalid-feedback\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.firstName.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tFirst Name is required\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>Last Name</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"lastName\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"submitted && f.lastName.errors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"invalid-feedback\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.lastName.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tLast Name is required\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"phone\\\">Phone</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"tel\\\"\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"phoneNumber\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.phoneNumber.errors }\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"submitted && f.phoneNumber.errors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"invalid-feedback\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.phoneNumber.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tPhone Number is required\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>Email</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"email\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.email.errors.email\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tEmail must be a valid email address\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>Password</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"submitted && f.password.errors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"invalid-feedback\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.password.errors.minlength\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tPassword must be at least 6 characters\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>Confirm Password</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"confirmPassword\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t\\t\\t\\t\\t'is-invalid': submitted && f.confirmPassword.errors\\n\\t\\t\\t\\t\\t\\t\\t}\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"submitted && f.confirmPassword.errors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"invalid-feedback\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.confirmPassword.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tConfirm Password is required\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tPasswords must match\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Register\\\" />\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n\"","export default \"<div class=\\\"row justify-content-center h-100 align-items-center\\\">\\n\\t<div class=\\\"col-md-4 col-12\\\">\\n\\t\\t<form [formGroup]=\\\"forgotPasswordForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"email\\\">User Name</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\ttype=\\\"email\\\"\\n\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.userName.invalid }\\\"\\n\\t\\t\\t\\t\\tformControlName=\\\"userName\\\"\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.userName.errors\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.userName.errors.required\\\">User Name is required</div>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.userName.errors.email\\\">\\n\\t\\t\\t\\t\\t\\tUser Name must be a valid email address\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Validate\\\" />\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n\"","export default \"<div class=\\\"row justify-content-center h-100 align-items-center\\\">\\n\\t<div class=\\\"col-md-4 col-12\\\">\\n\\t\\t<div *ngIf=\\\"loading\\\">\\n\\t\\t\\t<app-loading>Loading...</app-loading>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n\\t\\t\\t{{ error }}\\n\\t\\t</div>\\n\\t\\t<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"email\\\">Email</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\ttype=\\\"email\\\"\\n\\t\\t\\t\\t\\tformControlName=\\\"userName\\\"\\n\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.userName.errors }\\\"\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.userName.errors\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.userName.errors.required\\\">\\n\\t\\t\\t\\t\\t\\tUsername is required\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.userName.errors.email\\\">\\n\\t\\t\\t\\t\\t\\tUsername is not a valid email address\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\tformControlName=\\\"password\\\"\\n\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.password.errors.minlength\\\">\\n\\t\\t\\t\\t\\t\\tPassword must be at least 6 characters\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Login\\\" />\\n\\t\\t</form>\\n\\t\\t<div class=\\\"d-flex justify-content-between\\\">\\n\\t\\t\\t<a [routerLink]=\\\"['../job-seeker-registration']\\\" class=\\\"btn btn-link\\\"\\n\\t\\t\\t\\t>Register</a\\n\\t\\t\\t>\\n\\t\\t\\t<a [routerLink]=\\\"['../forgot-password']\\\" class=\\\"btn btn-link\\\"\\n\\t\\t\\t\\t>Forgot Password</a\\n\\t\\t\\t>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","export default \"<div class=\\\"row justify-content-center h-100 align-items-center\\\">\\n\\t<div class=\\\"col-md-8 col-12\\\">\\n\\t\\t<div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n\\t\\t\\t{{ error }}\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"loading\\\">\\n\\t\\t\\t<app-loading>Loading...</app-loading>\\n\\t\\t</div>\\n\\t\\t<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>First Name</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"firstName\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"submitted && f.firstName.errors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"invalid-feedback\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.firstName.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tFirst Name is required\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>Last Name</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"lastName\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"submitted && f.lastName.errors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"invalid-feedback\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.lastName.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tLast Name is required\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"phone\\\">Phone</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"tel\\\"\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"phoneNumber\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.phoneNumber.errors }\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"submitted && f.phoneNumber.errors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"invalid-feedback\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.lastName.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tPhone Number is required\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>Email</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"email\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.email.errors.email\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tEmail must be a valid email address\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>Password</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"submitted && f.password.errors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"invalid-feedback\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.password.errors.minlength\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tPassword must be at least 6 characters\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-12\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>Confirm Password</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"confirmPassword\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t\\t\\t\\t\\t'is-invalid': submitted && f.confirmPassword.errors\\n\\t\\t\\t\\t\\t\\t\\t}\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t*ngIf=\\\"submitted && f.confirmPassword.errors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"invalid-feedback\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.confirmPassword.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tConfirm Password is required\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tPasswords must match\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Register\\\" />\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n\"","export default \"<div class=\\\"row justify-content-center h-100 align-items-center\\\">\\n\\t<div class=\\\"col-md-4 col-12\\\">\\n\\t\\t<form [formGroup]=\\\"resetPasswordForm\\\" (ngSubmit)=\\\"changePassword()\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"newPassword\\\">New Password</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t\\t\\t'is-invalid': submitted && f.newPassword.invalid\\n\\t\\t\\t\\t\\t}\\\"\\n\\t\\t\\t\\t\\tformControlName=\\\"newPassword\\\"\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && f.newPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.newPassword.errors.required\\\">\\n\\t\\t\\t\\t\\t\\tNew Password is required\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.newPassword.errors.minlength\\\">\\n\\t\\t\\t\\t\\t\\tNew Password must be at least 6 characters\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"confirmPassword\\\">Confirm Password</label>\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\tformControlName=\\\"confirmPassword\\\"\\n\\t\\t\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t\\t\\t'is-invalid': submitted && f.confirmPassword.invalid\\n\\t\\t\\t\\t\\t}\\\"\\n\\t\\t\\t\\t/>\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t*ngIf=\\\"submitted && f.confirmPassword.errors\\\"\\n\\t\\t\\t\\t\\tclass=\\\"invalid-feedback\\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.confirmPassword.errors.required\\\">\\n\\t\\t\\t\\t\\t\\tConfirm Password is required\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">\\n\\t\\t\\t\\t\\t\\tPasswords must match\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<input\\n\\t\\t\\t\\ttype=\\\"submit\\\"\\n\\t\\t\\t\\tclass=\\\"btn btn-primary btn-block\\\"\\n\\t\\t\\t\\tvalue=\\\"Change Password\\\"\\n\\t\\t\\t/>\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { JobSeekerLoginComponent } from './job-seeker-login/job-seeker-login.component';\r\nimport { JobSeekerRegistrationComponent } from './job-seeker-registration/job-seeker-registration.component';\r\nimport { EmployeerLoginComponent } from './employeer-login/employeer-login.component';\r\nimport { EmployeerRegistartionComponent } from './employeer-registartion/employeer-registartion.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\n\r\nconst authRoutes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: AuthComponent\r\n\t},\r\n\t{ path: 'job-seeker-login', component: JobSeekerLoginComponent },\r\n\t{\r\n\t\tpath: 'job-seeker-registration',\r\n\t\tcomponent: JobSeekerRegistrationComponent\r\n\t},\r\n\t{ path: 'employeer-login', component: EmployeerLoginComponent },\r\n\t{\r\n\t\tpath: 'employeer-registration',\r\n\t\tcomponent: EmployeerRegistartionComponent\r\n\t},\r\n\t{ path: 'reset-password', component: ResetPasswordComponent },\r\n\t{ path: 'forgot-password', component: ForgotPasswordComponent }\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(authRoutes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AuthComponent } from './auth/auth.component';\nimport { JobSeekerRegistrationComponent } from './job-seeker-registration/job-seeker-registration.component';\nimport { JobSeekerLoginComponent } from './job-seeker-login/job-seeker-login.component';\nimport { EmployeerRegistartionComponent } from './employeer-registartion/employeer-registartion.component';\nimport { EmployeerLoginComponent } from './employeer-login/employeer-login.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { CoreModule } from '../core/core.module';\n\n@NgModule({\n\tdeclarations: [\n\t\tAuthComponent,\n\t\tJobSeekerRegistrationComponent,\n\t\tJobSeekerLoginComponent,\n\t\tEmployeerRegistartionComponent,\n\t\tEmployeerLoginComponent,\n\t\tForgotPasswordComponent,\n\t\tResetPasswordComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tHttpClientModule,\n\t\tAuthRoutingModule,\n\t\tCoreModule\n\t]\n})\nexport class AuthModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC9hdXRoLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvZW1wbG95ZWVyLWxvZ2luL2VtcGxveWVlci1sb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport {\n\tFormGroup,\n\tFormBuilder,\n\tFormControl,\n\tValidators\n} from '@angular/forms';\nimport { AppState } from 'src/app/store/AppState';\nimport { AuthLoginStart } from 'src/app/store/actions/auth.actions';\n\n@Component({\n\tselector: 'app-employeer-login',\n\ttemplateUrl: './employeer-login.component.html',\n\tstyleUrls: ['./employeer-login.component.scss']\n})\nexport class EmployeerLoginComponent implements OnInit {\n\tloginForm: FormGroup;\n\tsubmitted = false;\n\terror: string = null;\n\tloading = false;\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate router: Router,\n\t\tprivate store: Store<AppState>\n\t) {}\n\n\tngOnInit() {\n\t\tthis.loginForm = this.formBuilder.group({\n\t\t\tuserName: new FormControl('', [Validators.required, Validators.email]),\n\t\t\tpassword: new FormControl('', [\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(6)\n\t\t\t])\n\t\t});\n\t\tthis.store.select('authState').subscribe(authState => {\n\t\t\tthis.error = authState.errorMessage;\n\t\t\tthis.loading = authState.loading;\n\t\t\tif (authState.user) {\n\t\t\t\tthis.router.navigate(['/onboarding/personal-info']);\n\t\t\t}\n\t\t});\n\t}\n\tget f() {\n\t\treturn this.loginForm.controls;\n\t}\n\tlogin() {\n\t\tthis.submitted = true;\n\t\tif (this.loginForm.invalid) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log('here');\n\t\tthis.store.dispatch(\n\t\t\tnew AuthLoginStart({\n\t\t\t\temail: this.loginForm.get('userName').value,\n\t\t\t\tpassword: this.loginForm.get('password').value\n\t\t\t})\n\t\t);\n\t}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvZW1wbG95ZWVyLXJlZ2lzdGFydGlvbi9lbXBsb3llZXItcmVnaXN0YXJ0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { MustMatch } from '../../shared/CustomValidatos';\n\n@Component({\n\tselector: 'app-employeer-registartion',\n\ttemplateUrl: './employeer-registartion.component.html',\n\tstyleUrls: ['./employeer-registartion.component.scss']\n})\nexport class EmployeerRegistartionComponent implements OnInit {\n\tregisterForm: FormGroup;\n\tsubmitted = false;\n\n\tconstructor(private formBuilder: FormBuilder) {}\n\n\tngOnInit() {\n\t\tthis.registerForm = this.formBuilder.group(\n\t\t\t{\n\t\t\t\tfirstName: ['', Validators.required],\n\t\t\t\tlastName: ['', Validators.required],\n\t\t\t\tphoneNumber: ['', Validators.required],\n\t\t\t\temail: ['', [Validators.required, Validators.email]],\n\t\t\t\tpassword: ['', [Validators.required, Validators.minLength(6)]],\n\t\t\t\tconfirmPassword: ['', Validators.required]\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalidator: MustMatch('password', 'confirmPassword')\n\t\t\t}\n\t\t);\n\t}\n\n\t// convenience getter for easy access to form fields\n\tget f() {\n\t\treturn this.registerForm.controls;\n\t}\n\n\tregister() {\n\t\tthis.submitted = true;\n\n\t\t// stop here if form is invalid\n\t\tif (this.registerForm.invalid) {\n\t\t\treturn;\n\t\t}\n\n\t\talert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value));\n\t}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {\n\tFormGroup,\n\tFormBuilder,\n\tFormControl,\n\tValidators\n} from '@angular/forms';\n\n@Component({\n\tselector: 'app-forgot-password',\n\ttemplateUrl: './forgot-password.component.html',\n\tstyleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\tforgotPasswordForm: FormGroup;\n\tsubmitted = false;\n\tconstructor(private formBuilder: FormBuilder) {}\n\n\tngOnInit() {\n\t\tthis.forgotPasswordForm = this.formBuilder.group({\n\t\t\tuserName: new FormControl('', [Validators.required, Validators.email])\n\t\t});\n\t}\n\n\tget f() {\n\t\treturn this.forgotPasswordForm.controls;\n\t}\n\tonSubmit() {\n\t\tthis.submitted = true;\n\t\tif (this.forgotPasswordForm.invalid) {\n\t\t\treturn true;\n\t\t}\n\t\tconsole.log(this.forgotPasswordForm);\n\t}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvam9iLXNlZWtlci1sb2dpbi9qb2Itc2Vla2VyLWxvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {\n\tFormGroup,\n\tFormBuilder,\n\tFormControl,\n\tValidators\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/AppState';\nimport { AuthLoginStart } from '../../store/actions/auth.actions';\n\n@Component({\n\tselector: 'app-job-seeker-login',\n\ttemplateUrl: './job-seeker-login.component.html',\n\tstyleUrls: ['./job-seeker-login.component.scss']\n})\nexport class JobSeekerLoginComponent implements OnInit {\n\tloginForm: FormGroup;\n\tsubmitted = false;\n\terror: string = null;\n\tloading = false;\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate router: Router,\n\t\tprivate store: Store<AppState>\n\t) {}\n\n\tngOnInit() {\n\t\tthis.loginForm = this.formBuilder.group({\n\t\t\tuserName: ['', [Validators.required, Validators.email]],\n\t\t\tpassword: ['', [Validators.required, Validators.minLength(6)]]\n\t\t});\n\t\tthis.store.select('authState').subscribe(authState => {\n\t\t\tthis.error = authState.errorMessage;\n\t\t\tthis.loading = authState.loading;\n\t\t\tif (authState.user) {\n\t\t\t\tthis.router.navigate(['/onboarding/personal-info']);\n\t\t\t}\n\t\t});\n\t}\n\tget f() {\n\t\treturn this.loginForm.controls;\n\t}\n\tlogin() {\n\t\tthis.submitted = true;\n\t\tif (this.loginForm.invalid) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log('here');\n\t\tthis.store.dispatch(\n\t\t\tnew AuthLoginStart({\n\t\t\t\temail: this.loginForm.get('userName').value,\n\t\t\t\tpassword: this.loginForm.get('password').value\n\t\t\t})\n\t\t);\n\t}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvam9iLXNlZWtlci1yZWdpc3RyYXRpb24vam9iLXNlZWtlci1yZWdpc3RyYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MustMatch } from '../../shared/CustomValidatos';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/AppState';\nimport { AuthRegistrationStart } from 'src/app/store/actions/auth.actions';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-job-seeker-registration',\n\ttemplateUrl: './job-seeker-registration.component.html',\n\tstyleUrls: ['./job-seeker-registration.component.scss']\n})\nexport class JobSeekerRegistrationComponent implements OnInit {\n\tregisterForm: FormGroup;\n\tsubmitted = false;\n\terror: string = null;\n\tloading = false;\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate store: Store<AppState>,\n\t\tprivate router: Router\n\t) {}\n\n\tngOnInit() {\n\t\tthis.store.select('authState').subscribe(authState => {\n\t\t\tthis.error = authState.errorMessage;\n\t\t\tthis.loading = authState.loading;\n\t\t});\n\t\tthis.registerForm = this.formBuilder.group(\n\t\t\t{\n\t\t\t\tfirstName: ['', Validators.required],\n\t\t\t\tlastName: ['', Validators.required],\n\t\t\t\tphoneNumber: ['', Validators.required],\n\t\t\t\temail: ['', [Validators.required, Validators.email]],\n\t\t\t\tpassword: ['', [Validators.required, Validators.minLength(6)]],\n\t\t\t\tconfirmPassword: ['', Validators.required]\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalidator: MustMatch('password', 'confirmPassword')\n\t\t\t}\n\t\t);\n\t}\n\n\t// convenience getter for easy access to form fields\n\tget f() {\n\t\treturn this.registerForm.controls;\n\t}\n\n\tregister() {\n\t\tthis.submitted = true;\n\n\t\t// stop here if form is invalid\n\t\tif (this.registerForm.invalid) {\n\t\t\treturn;\n\t\t}\n\t\tthis.store.dispatch(\n\t\t\tnew AuthRegistrationStart({\n\t\t\t\tfirstName: this.registerForm.get('firstName').value,\n\t\t\t\tlastName: this.registerForm.get('lastName').value,\n\t\t\t\temail: this.registerForm.get('email').value,\n\t\t\t\tphoneNumber: this.registerForm.get('phoneNumber').value,\n\t\t\t\tpassword: this.registerForm.get('password').value\n\t\t\t})\n\t\t);\n\t}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {\n\tFormGroup,\n\tFormControl,\n\tValidators,\n\tAbstractControl,\n\tFormBuilder\n} from '@angular/forms';\nimport { MustMatch } from '../../shared/CustomValidatos';\n\n@Component({\n\tselector: 'app-reset-password',\n\ttemplateUrl: './reset-password.component.html',\n\tstyleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\tresetPasswordForm: FormGroup;\n\tsubmitted = false;\n\tconstructor(private formBuilder: FormBuilder) {}\n\n\tngOnInit() {\n\t\tthis.resetPasswordForm = this.formBuilder.group(\n\t\t\t{\n\t\t\t\tnewPassword: new FormControl('', [\n\t\t\t\t\tValidators.required,\n\t\t\t\t\tValidators.minLength(6)\n\t\t\t\t]),\n\t\t\t\tconfirmPassword: new FormControl('', [Validators.required])\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalidator: MustMatch('newPassword', 'confirmPassword')\n\t\t\t}\n\t\t);\n\t}\n\n\tget f() {\n\t\treturn this.resetPasswordForm.controls;\n\t}\n\n\tchangePassword() {\n\t\tthis.submitted = true;\n\t\tif (this.resetPasswordForm.invalid) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(this.resetPasswordForm);\n\t}\n}\n","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n\treturn (formGroup: FormGroup) => {\n\t\tconst control = formGroup.controls[controlName];\n\t\tconst matchingControl = formGroup.controls[matchingControlName];\n\n\t\tif (matchingControl.errors && !matchingControl.errors.mustMatch) {\n\t\t\t// return if another validator has already found an error on the matchingControl\n\t\t\treturn;\n\t\t}\n\n\t\t// set error on matchingControl if validation fails\n\t\tif (control.value !== matchingControl.value) {\n\t\t\tmatchingControl.setErrors({ mustMatch: true });\n\t\t} else {\n\t\t\tmatchingControl.setErrors(null);\n\t\t}\n\t};\n}\n"],"sourceRoot":"webpack:///"}